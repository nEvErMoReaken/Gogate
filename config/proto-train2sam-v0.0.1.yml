# 用于表示帧开头的配置
# 流程  ： 接收tcp-> 字节流通过method decode出数据 -> 将解码后数据赋值给对应设备物模型 -> 发送至 kafka-数据库
# 整体流程： 预解析 -> 正式解析
pre-parsing: # 预解析：解析部分数据，用于后续解析, 如crc、帧长度、车id等。初始化为一些帧变量
  - from: # 没有解码方式的即为不用处理，jump即可
      byte: 72
  - from:
      byte: 2  # 字节长度
    decoding:
      method:
    for: "len" # 预解析时才可以赋值变量 (变量的生命周期随着该帧数据解析完毕而消亡)
    desc: "帧长度 长度由字节69开始计算" #字段说明
  - from:
      byte: 2  # 字节长度
    decoding:
      method:
    for:
      - "checksum"
    desc: "checksum校验" #字段说明
  - from:
      byte: 16
  - from:
      byte: 2  # 字节长度
    decoding:
      method:
    to:
      cached: true # 该字段开启缓存，变化才发送，对应tb attribute思想
      stable: true # 该字段是z稳定信息，例如版本参数，设备物理参数等不常变化的信息且唯一。
    desc: "协议版本"
  - from:
      byte: 2  # 字节长度
    decoding:
      method:
    for:
      - "inner_len"
    desc: "内部帧长度，从 TYPE 字节到最后一个字节" #字段说明
  - from:
      byte: 2
  - from:
      byte: 2
    decoding:
      method:
    for: "crc"
    desc: "crc校验计算" #字段说明
  - from:
      byte: 3

parsing: # frame 由多个section组成，列表形式，顺序不能乱。
  - from:
      byte: 1 # 字节偏移量基础上的位偏移量
    decoding:
      method: # 解码脚本
    to: # 转换相关配置
      influxdb:
        measurement: others
        fieldMappings:
          - RIOM_sta_1
          - RIOM_sta_2
          - RIOM_sta_3
          - RIOM_sta_4
          - RIOM_sta_5
          - RIOM_sta_6
          - RIOM_sta_7
          - RIOM_sta_8
  - from:
      byte: 6
    decoding:
      method:
    to: # 转换相关配置
      influxdb:
        measurement: others
        for:
          - "timestamp"
    desc: "协议中的时间戳" #字段说明




